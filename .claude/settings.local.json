{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "WebFetch(domain:github.com)",
      "Bash(chmod:*)",
      "Bash(rm:*)",
      "Bash(touch:*)",
      "Bash(where podman)",
      "Bash(powershell:*)",
      "Bash(mv:*)",
      "Bash(find:*)",
      "Bash(ls:*)",
      "Bash(export REPOS_PATH=\"/mnt/c/devl/workspaces\")",
      "Bash(echo:*)",
      "Bash(./start-mvp.sh:*)",
      "Bash(gemini:*)",
      "Bash(sed:*)",
      "Bash(mkdir:*)",
      "WebFetch(domain:learn.castsoftware.com)",
      "Bash(python:*)",
      "Bash(./check-environment.sh:*)",
      "Bash(./start-mvp-with-ui.sh:*)",
      "Bash(npm install:*)",
      "Bash(npm run build:*)",
      "Bash(pip install:*)",
      "Bash(podman:*)",
      "Bash(curl:*)",
      "Bash(sudo curl:*)",
      "Bash(sudo chmod:*)",
      "Bash(wmic:*)",
      "Bash(redis-cli:*)",
      "Bash(cp:*)",
      "Bash(-e APP_ENV=development )",
      "Bash(-e API_HOST=0.0.0.0 )",
      "Bash(-e API_PORT=8080 )",
      "Bash(-e API_WORKERS=2 )",
      "Bash(-e CHROMA_HOST=chromadb )",
      "Bash(-e CHROMA_PORT=8000 )",
      "Bash(-e NEO4J_URI=bolt://neo4j:7687 )",
      "Bash(-e NEO4J_USERNAME=neo4j )",
      "Bash(-e NEO4J_PASSWORD=codebase-rag-2024 )",
      "Bash(-e NEO4J_DATABASE=neo4j )",
      "Bash(-e REDIS_URL=redis://redis:6379 )",
      "Bash(-e POSTGRES_URL=postgresql://codebase_rag:codebase-rag-2024@postgres:5432/codebase_rag )",
      "Bash(-e MINIO_ENDPOINT=minio:9000 )",
      "Bash(-e MINIO_ACCESS_KEY=codebase-rag )",
      "Bash(-e MINIO_SECRET_KEY=codebase-rag-2024 )",
      "Bash(-e LOG_LEVEL=INFO )",
      "Bash(-e EMBEDDING_MODEL=sentence-transformers/all-MiniLM-L6-v2 )",
      "Bash(-v \"./data/repositories:/app/data/repositories\" )",
      "Bash(-v \"./logs:/app/logs\" )",
      "Bash(-v \"./config/api:/app/config\" )",
      "Bash(codebase-rag-api)",
      "Bash(-e APP_ENV=development )",
      "Bash(-e API_HOST=0.0.0.0 )",
      "Bash(-e API_PORT=8080 )",
      "Bash(-e API_WORKERS=2 )",
      "Bash(-e CHROMA_HOST=chromadb )",
      "Bash(-e CHROMA_PORT=8000 )",
      "Bash(-e NEO4J_URI=bolt://neo4j:7687 )",
      "Bash(-e NEO4J_USERNAME=neo4j )",
      "Bash(-e NEO4J_PASSWORD=codebase-rag-2024 )",
      "Bash(-e NEO4J_DATABASE=neo4j )",
      "Bash(-e REDIS_URL=redis://redis:6379 )",
      "Bash(-e POSTGRES_URL=postgresql://codebase_rag:codebase-rag-2024@postgres:5432/codebase_rag )",
      "Bash(-e MINIO_ENDPOINT=minio:9000 )",
      "Bash(-e MINIO_ACCESS_KEY=codebase-rag )",
      "Bash(-e MINIO_SECRET_KEY=codebase-rag-2024 )",
      "Bash(-e LOG_LEVEL=INFO )",
      "Bash(-e EMBEDDING_MODEL=sentence-transformers/all-MiniLM-L6-v2 )",
      "Bash(-e APP_ENV=development )",
      "Bash(-e CHROMA_HOST=chromadb )",
      "Bash(-e CHROMA_PORT=8000 )",
      "Bash(-e NEO4J_URI=bolt://neo4j:7687 )",
      "Bash(-e NEO4J_USERNAME=neo4j )",
      "Bash(-e NEO4J_PASSWORD=codebase-rag-2024 )",
      "Bash(-e NEO4J_DATABASE=neo4j )",
      "Bash(-e REDIS_URL=redis://redis:6379 )",
      "Bash(-e POSTGRES_URL=postgresql://codebase_rag:codebase-rag-2024@postgres:5432/codebase_rag )",
      "Bash(-e MINIO_ENDPOINT=minio:9000 )",
      "Bash(-e MINIO_ACCESS_KEY=codebase-rag )",
      "Bash(-e MINIO_SECRET_KEY=codebase-rag-2024 )",
      "Bash(-e LOG_LEVEL=INFO )",
      "Bash(-e EMBEDDING_MODEL=sentence-transformers/all-MiniLM-L6-v2 )",
      "Bash(-e MAX_CONCURRENT_REPOS=4 )",
      "Bash(-e BATCH_SIZE=50 )",
      "Bash(codebase-rag-worker)",
      "Bash(-e APP_ENV=development )",
      "Bash(-e CHROMA_HOST=chromadb )",
      "Bash(-e CHROMA_PORT=8000 )",
      "Bash(-e NEO4J_URI=bolt://neo4j:7687 )",
      "Bash(-e NEO4J_USERNAME=neo4j )",
      "Bash(-e NEO4J_PASSWORD=codebase-rag-2024 )",
      "Bash(-e NEO4J_DATABASE=neo4j )",
      "Bash(-e REDIS_URL=redis://redis:6379 )",
      "Bash(-e POSTGRES_URL=postgresql://codebase_rag:codebase-rag-2024@postgres:5432/codebase_rag )",
      "Bash(-e MINIO_ENDPOINT=minio:9000 )",
      "Bash(-e MINIO_ACCESS_KEY=codebase-rag )",
      "Bash(-e MINIO_SECRET_KEY=codebase-rag-2024 )",
      "Bash(-e LOG_LEVEL=INFO )",
      "Bash(-e EMBEDDING_MODEL=sentence-transformers/all-MiniLM-L6-v2 )",
      "Bash(-e MAX_CONCURRENT_REPOS=4 )",
      "Bash(-e BATCH_SIZE=50 )",
      "Bash(--entrypoint=\"\" )",
      "Bash(move universal-startup.ps1 universal-startup-broken.ps1)",
      "Bash(move universal-startup-simple.ps1 universal-startup.ps1)",
      "Bash(grep:*)",
      "Bash(.check-status.ps1)",
      "Bash(taskkill:*)",
      "Bash(pip show:*)",
      "Bash(move universal-startup-backup.ps1 archivestartup-scripts )",
      "Bash(move universal-startup-broken.ps1 archivestartup-scripts )",
      "Bash(move universal-startup-fixed.ps1 archivestartup-scripts )",
      "Bash(move start-codebase-rag.ps1 archivestartup-scripts)",
      "Bash(move podman-compose-windows.yml archivecompose-configs )",
      "Bash(move:*)",
      "Bash(move single-container-compose.yml archivecompose-configs )",
      "Bash(move docker-compose-mvp-ui.yml archivecompose-configs )",
      "Bash(node:*)",
      "Bash(npm:*)",
      "Bash(docker restart:*)",
      "Bash(timeout 10 python -m src.main)",
      "Bash(timeout 30 python -m src.main)",
      "Bash(timeout 20 python -m src.main)",
      "Bash(timeout 15 python -m src.main)",
      "Bash(Get-Content logsstart-2025-08-01-22-47-42.log -Tail 20)",
      "Bash(tasklist:*)",
      "Bash(timeout:*)",
      "Bash(.START.ps1 -Status)",
      "Bash(start-api.ps1)",
      "Bash(start npm start)",
      "Bash(git init:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(Start-Sleep 2)",
      "Bash(Start-Sleep 5)",
      "Bash(true)",
      "Bash(Get-Content \"logs/start-2025-08-02-15-38-01.log\" -Tail 20)",
      "Bash(Start-Sleep 10)",
      "Bash(./start-api.ps1)",
      "Bash(set APP_ENV=development)",
      "Bash(set API_HOST=0.0.0.0)",
      "Bash(set API_PORT=8080)",
      "Bash(set CHROMA_HOST=localhost)",
      "Bash(set CHROMA_PORT=8000)",
      "Bash(set NEO4J_URI=bolt://localhost:7687)",
      "Bash(set NEO4J_USERNAME=neo4j)",
      "Bash(set NEO4J_PASSWORD=codebase-rag-2024)",
      "Bash(set NEO4J_DATABASE=neo4j)",
      "Bash(set LOG_LEVEL=DEBUG)",
      "Bash(set EMBEDDING_MODEL=microsoft/codebert-base)",
      "Bash(set AUTH_ENABLED=false)",
      "Bash($env:CHROMA_DISABLED=\"true\")",
      "Bash(dir C:temptest-local-repo)",
      "Bash(.START.ps1 -Mode full -Clean)",
      "Bash(pip check)",
      "Bash(git check-ignore:*)",
      "Bash(git checkout:*)",
      "Bash(.START.ps1 -Clean -Mode full)",
      "Bash(Get-Content \"logs/start-2025-08-02-15-38-01.log\" -Tail 30)",
      "WebFetch(domain:deepwiki.org)",
      "WebSearch",
      "Bash(cat:*)",
      "Bash(if [ -d \"output\" ])",
      "Bash(then mv output \"../archive/legacy/backend_output\")",
      "Bash(fi)",
      "Bash(if [ -d \"C:/devl/workspaces/docxp/frontend/docs\" ])",
      "Bash(then mv \"C:/devl/workspaces/docxp/frontend/docs\" \"C:/devl/workspaces/docxp/archive/documentation/frontend_docs\")"
    ],
    "deny": [],
    "defaultMode": "acceptEdits",
    "additionalDirectories": [
      "C:\\c\\devl\\workspaces\\docxp\\backend\\app\\models",
      "C:\\c\\devl\\workspaces\\docxp\\backend\\app\\services",
      "C:\\c\\devl\\workspaces\\docxp\\backend\\app\\api"
    ]
  }
}